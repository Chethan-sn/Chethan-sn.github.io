let valueArray=[1,2,3,4,5,6];let placeArray=["11","12","13","21","22","23","31","32","33"];let userAvailableValues=["6","5","4","3","2","1"];let userPositionArray=[];let aiAvailableValues=["6","5","4","3","2","1"];let aiPositionArray=[];let userPosition;let aiPosition;let boardPositions=["11","12","13","21","22","23","31","32","33"];let masterList=[123,132,213,231,312,321,456,465,546,564,645,654,789,798,879,897,978,987,147,174,417,471,714,741,258,285,528,582,825,852,369,396,639,693,936,963,159,195,519,591,915,951,357,375,537,573,735,753];let playerTurn=true;let totalCounter=0;let riskCounter;let riskPaths;let currentUserSelection;let currentUserPosition;let currentAiPosition;let boardSelectable=false;function onValueSelection(val){if(playerTurn){boardSelectable=true;let valueControl=document.querySelector("#player"+val);valueControl.classList.add("selected");currentUserSelection=val;valueArray.forEach(element=>{if(element!=val){let tempValueControl=document.querySelector("#player"+element);tempValueControl.classList.remove("selected")}});disableUnEligibleBoxes()}}function checkForNew(){if(!localStorage.gameStats){showRules()}}function showRules(){let popContainer=document.querySelector("#rulespopup");popContainer.style.display="block"}function showPop(user){let popContainer=document.querySelector("#popup");popContainer.style.display="block";let popBody=document.querySelector("#messageBody");let statsObj;if(localStorage.gameStats){statsObj=JSON.parse(localStorage.gameStats)}else{statsObj={won:0,lost:0,draw:0}}let msg;if(user=="user"){msg='<div style="margin-bottom : 2rem;">Impressive, You win !! Try other combinations</div>';statsObj.won=Number(statsObj.won)+1}else if(user=="draw"){msg='<div style="margin-bottom : 2rem;">Its a Draw !! Try Again to win</div>';statsObj.draw=Number(statsObj.won)+1;msg+="<div> Wins : "+statsObj.won+"</div"}else if(user=="ai"){msg='<div style="margin-bottom : 2rem;">AnunnakI win !! Better luck next time</div>';statsObj.lost=Number(statsObj.lost)+1}else msg="";msg+="<div> Wins : "+statsObj.won+"</div";msg+="<div> Loss : "+statsObj.lost+"</div";msg+="<div> Draw : "+statsObj.draw+"</div";console.log(msg);popBody.innerHTML=msg;localStorage.gameStats=JSON.stringify(statsObj)}function reset(){let popContainer=document.querySelector("#popup");popContainer.style.display="none";window.location.reload()}function closeRules(){let popContainer=document.querySelector("#rulespopup");popContainer.style.display="none"}function disableUnEligibleBoxes(){for(let i=0;i<boardPositions.length;i++){let boxControl=document.querySelector("#box"+boardPositions[i]);if(boxControl.innerHTML!=""){if(userPositionArray.indexOf(boardPositions[i])<0){if(Number(boxControl.innerHTML)>=Number(currentUserSelection)){boxControl.classList.add("disable")}else{boxControl.classList.remove("disable")}}else{boxControl.classList.add("disable")}}else{boxControl.classList.remove("disable")}}}function assignValue(val){if(playerTurn&&boardSelectable){let boxPosition=val.substring(3);currentUserPosition=boxPosition;let boxControl=document.querySelector("#"+val);boxControl.innerHTML=currentUserSelection;boxControl.classList.remove("ai-assigned");boxControl.classList.add("player-assigned");let valueControl=document.querySelector("#player"+currentUserSelection);valueControl.style.display="none";playerTurn=false;let tempValueIndex=userAvailableValues.indexOf(currentUserSelection+"");tempValueIndex>=0?userAvailableValues.splice(tempValueIndex,1):"";userPositionArray.push(boxPosition);let tempIndex=aiPositionArray.indexOf(boxPosition);tempIndex>=0?aiPositionArray.splice(tempIndex,1):"";totalCounter+=1;setTimeout(calculateAiValue,1e3)}}function calculateAiValue(){if(totalCounter==1){let aiFirstPosition=1;for(let i=0;i<placeArray.length;i++){if(placeArray[i]!=userPositionArray[0]){aiFirstPosition=placeArray[i];break}}assignAiValue(aiFirstPosition,currentUserSelection+"")}else{if(!checkForGame(true)){calculateAiPosition()}}totalCounter+=1;boardSelectable=false}function checkForGame(user){let posArray=user?[...userPositionArray]:[...aiPositionArray];let position=posArray[posArray.length-1];let horizontalCount=0;let verticalCount=0;let ldCount=0;let rdCount=0;if(posArray.length>=3){let positionArray=position.split("");let length=3;let xposition=Number(positionArray[0]);let yposition=Number(positionArray[1]);for(let i=1;i<=length;i++){let posElem=xposition+""+i;if(posArray.indexOf(posElem)>=0){horizontalCount++}else{break}}for(let i=1;i<=length;i++){let posElem=i+""+yposition;if(posArray.indexOf(posElem)>=0){verticalCount++}else{break}}let ldPos=["11","22","33"];for(let i=0;i<ldPos.length;i++){let posElem=ldPos[i];if(posArray.indexOf(posElem)>=0){ldCount++}else{break}}let rdPos=["31","22","13"];for(let i=0;i<rdPos.length;i++){let posElem=rdPos[i];if(posArray.indexOf(posElem)>=0){rdCount++}else{break}}if(horizontalCount==3||verticalCount==3||ldCount==3||rdCount==3){let userName=user?"user":"ai";showPop(userName);return true}else{let isDraw=true;for(let i=0;i<boardPositions.length;i++){let boxControl=document.querySelector("#box"+boardPositions[i]);if(boxControl.innerHTML!=""){isDraw=false;break}}if(userAvailableValues.length!=0&&aiAvailableValues!=0){isDraw=false}if(isDraw){showPop("draw");return true}else{return false}}}}function calculateAiPosition(){if(!loopAiPositions()){let positionArray=currentUserPosition.split("");if(userPositionArray.length>1){let currentX=positionArray[0];let currentY=positionArray[1];verifyUserPosition(currentX,currentY)}}setTimeout(()=>{checkForGame(false)},500)}function loopAiPositions(){for(let i=0;i<aiPositionArray.length;i++){let aiElement=aiPositionArray[i].split("");let aiX=aiElement[0];let aiY=aiElement[1];let ifAiWon=checkAiWinPossibility(aiX,aiY);if(ifAiWon){return true}}return false}function checkAiWinPossibility(xpos,ypos){let length=3;let xposition=Number(xpos);let yposition=Number(ypos);let horizontalCount=0;let verticalCount=0;let ldCount=0;let rdCount=0;let aiHorizontalEmptyPlaces=[];let aiVerticalEmptyPlaces=[];let aiLdEmptyPlaces=[];let aiRdEmptyPlaces=[];let aiHorizontalFilledPlaces=[];let aiVerticalFilledPlaces=[];let aiLdFilledPlaces=[];let aiRdFilledPlaces=[];for(let i=1;i<=length;i++){let posElem=xposition+""+i;let boxControl=document.querySelector("#box"+posElem);let boxVal=boxControl.innerHTML?Number(boxControl.innerHTML):0;if(aiPositionArray.indexOf(posElem)>=0){horizontalCount++;aiHorizontalFilledPlaces.push(posElem)}else if(Number(aiAvailableValues[0])>boxVal){aiHorizontalEmptyPlaces.push(posElem)}else{horizontalCount=0;break}}for(let i=1;i<=length;i++){let posElem=i+""+yposition;let boxControl=document.querySelector("#box"+posElem);let boxVal=boxControl.innerHTML?Number(boxControl.innerHTML):0;if(aiPositionArray.indexOf(posElem)>=0){verticalCount++;aiVerticalFilledPlaces.push(posElem)}else if(Number(aiAvailableValues[0])>boxVal){aiVerticalEmptyPlaces.push(posElem)}else{verticalCount=0;break}}let ldPos=["11","22","33"];for(let i=0;i<ldPos.length;i++){let posElem=ldPos[i];let boxControl=document.querySelector("#box"+posElem);let boxVal=boxControl.innerHTML?Number(boxControl.innerHTML):0;if(aiPositionArray.indexOf(posElem)>=0){ldCount++;aiLdFilledPlaces.push(posElem)}else if(Number(aiAvailableValues[0])>boxVal){aiLdEmptyPlaces.push(posElem)}else{ldCount=0;break}}let rdPos=["31","22","13"];for(let i=0;i<rdPos.length;i++){let posElem=rdPos[i];let boxControl=document.querySelector("#box"+posElem);let boxVal=boxControl.innerHTML?Number(boxControl.innerHTML):0;if(aiPositionArray.indexOf(posElem)>=0){rdCount++;aiRdFilledPlaces.push(posElem)}else if(Number(aiAvailableValues[0])>boxVal){aiRdEmptyPlaces.push(posElem)}else{rdCount=0;break}}if(horizontalCount==2){assignAiValue(aiHorizontalEmptyPlaces[0],aiAvailableValues[0]);return true}if(verticalCount==2){assignAiValue(aiVerticalEmptyPlaces[0],aiAvailableValues[0]);return true}if(ldCount==2){assignAiValue(aiLdEmptyPlaces[0],aiAvailableValues[0]);return true}if(rdCount==2){assignAiValue(aiRdEmptyPlaces[0],aiAvailableValues[0]);return true}return false}function verifyUserPosition(xpos,ypos){let length=3;let xposition=Number(xpos);let yposition=Number(ypos);let horizontalCount=0;let verticalCount=0;let ldCount=0;let rdCount=0;hEmptyPlaces=[];vEmptyPlaces=[];ldEmptyPlaces=[];rdEmptyPlaces=[];hFilledPlaces=[];vFilledPlaces=[];ldFilledPlaces=[];rdFilledPlaces=[];hRiskPlace=false;vRiskPlace=false;ldRiskPlace=false;rdRiskPlace=false;for(let i=1;i<=length;i++){let posElem=xposition+""+i;let boxControl=document.querySelector("#box"+posElem);let boxVal=boxControl.innerHTML?Number(boxControl.innerHTML):0;if(userPositionArray.indexOf(posElem)>=0){horizontalCount++;hFilledPlaces.push(posElem)}else if(boxVal==0){hEmptyPlaces.push(posElem)}else if(Number(userAvailableValues[0])>boxVal){hRiskPlace=true}else{horizontalCount=0;break}}for(let i=1;i<=length;i++){let posElem=i+""+yposition;let boxControl=document.querySelector("#box"+posElem);let boxVal=boxControl.innerHTML?Number(boxControl.innerHTML):0;if(userPositionArray.indexOf(posElem)>=0){verticalCount++;vFilledPlaces.push(posElem)}else if(boxVal==0){vEmptyPlaces.push(posElem)}else if(Number(userAvailableValues[0])>boxVal){vRiskPlace=true}else{verticalCount=0;break}}let ldPos=["11","22","33"];for(let i=0;i<ldPos.length;i++){let posElem=ldPos[i];let boxControl=document.querySelector("#box"+posElem);let boxVal=boxControl.innerHTML?Number(boxControl.innerHTML):0;if(userPositionArray.indexOf(posElem)>=0){ldCount++;ldFilledPlaces.push(posElem)}else if(boxVal==0){ldEmptyPlaces.push(posElem)}else if(Number(userAvailableValues[0])>boxVal){ldRiskPlace=true}else{ldCount=0;break}}let rdPos=["31","22","13"];for(let i=0;i<rdPos.length;i++){let posElem=rdPos[i];let boxControl=document.querySelector("#box"+posElem);let boxVal=boxControl.innerHTML?Number(boxControl.innerHTML):0;if(userPositionArray.indexOf(posElem)>=0){rdCount++;rdFilledPlaces.push(posElem)}else if(boxVal==0){rdEmptyPlaces.push(posElem)}else if(Number(userAvailableValues[0])>boxVal){rdRiskPlace=true}else{rdCount=0;break}}let riskDirections=[];if(horizontalCount==2){riskDirections.push(hFilledPlaces)}if(verticalCount==2){riskDirections.push(vFilledPlaces)}if(ldCount==2){riskDirections.push(ldFilledPlaces)}if(rdCount==2){riskDirections.push(rdFilledPlaces)}if(riskDirections.length>=2){let array1=riskDirections[0];let array2=riskDirections[1];const filteredArray=array1.filter(value=>array2.includes(value));let boxControl=document.querySelector("#box"+filteredArray[0]);if(Number(boxControl.innerHTML)>=Number(aiAvailableValues[0])){showPop("user")}else{let assignableValue=findAssignableValue();assignableValue=Number(assignableValue)<=Number(boxControl.innerHTML)?aiAvailableValues[0]:assignableValue;assignAiValue(filteredArray[0],assignableValue)}}else if(riskDirections.length==1){let fillingObj;if(horizontalCount==2){fillingObj=checkAndReplaceLevel1Risk(hFilledPlaces,hEmptyPlaces)}else if(verticalCount==2){fillingObj=checkAndReplaceLevel1Risk(vFilledPlaces,vEmptyPlaces)}else if(ldCount==2){fillingObj=checkAndReplaceLevel1Risk(ldFilledPlaces,ldEmptyPlaces)}else if(rdCount==2){fillingObj=checkAndReplaceLevel1Risk(rdFilledPlaces,rdEmptyPlaces)}assignAiValue(fillingObj["fillingPosition"],fillingObj["assignableValue"])}else{let avaialablePosition;let userValueArray=[];for(let i=0;i<userPositionArray.length;i++){let boxControl=document.querySelector("#box"+userPositionArray[i]);userValueArray.push(Number(boxControl.innerHTML))}let max=Math.max(...userValueArray);if(Number(aiAvailableValues[0])>max){let index=userValueArray.indexOf(max);avaialablePosition=userPositionArray[index]}else{for(let i=0;i<boardPositions.length;i++){let boxControl=document.querySelector("#box"+boardPositions[i]);if(boxControl.innerHTML==""){avaialablePosition=boardPositions[i];break}}}let assignableValue=findAssignableValue();assignAiValue(avaialablePosition,assignableValue)}}function checkAndReplaceLevel1Risk(filledArray,emptyPlaces){let highest;let lowest;let valueFilled=[];let objectReturn={};filledArray.forEach(elem=>{let boxControl=document.querySelector("#box"+elem);valueFilled.push(boxControl.innerHTML)});if(Number(valueFilled[0])>Number(valueFilled[1])){highest=Number(valueFilled[0]);lowest=Number(valueFilled[1]);if(aiAvailableValues.indexOf(highest+1+"")>=0){objectReturn.assignableValue=aiAvailableValues[aiAvailableValues.indexOf(highest+1+"")];objectReturn.fillingPosition=filledArray[0]}else if(aiAvailableValues.indexOf(lowest+1+"")>=0){objectReturn.assignableValue=aiAvailableValues[aiAvailableValues.indexOf(lowest+1+"")];objectReturn.fillingPosition=filledArray[1]}else{objectReturn.fillingPosition=emptyPlaces[0]?emptyPlaces[0]:"";objectReturn.assignableValue=findAssignableValue()}}else{highest=Number(valueFilled[1]);lowest=Number(valueFilled[0]);if(aiAvailableValues.indexOf(highest+1+"")>=0){objectReturn.assignableValue=aiAvailableValues[aiAvailableValues.indexOf(highest+1+"")];objectReturn.fillingPosition=filledArray[1]}else if(aiAvailableValues.indexOf(lowest+1+"")>=0){objectReturn.assignableValue=aiAvailableValues[aiAvailableValues.indexOf(lowest+1+"")];objectReturn.fillingPosition=filledArray[0]}else{objectReturn.fillingPosition=emptyPlaces[0]?emptyPlaces[0]:"";objectReturn.assignableValue=findAssignableValue()}}return objectReturn}function findAssignableValue(){if(aiAvailableValues[0]>=userAvailableValues[0]){if(aiAvailableValues.indexOf(userAvailableValues[0])>=0){return userAvailableValues[0]}else{return aiAvailableValues[0]}}else{return aiAvailableValues[0]}}function assignAiValue(pos,aVal){let boxControl=document.querySelector("#box"+pos);boxControl.innerHTML=aVal;boxControl.classList.add("ai-assigned");let valueControl=document.querySelector("#ai"+aVal);valueControl.style.display="none";let tempValueIndex=aiAvailableValues.indexOf(aVal);tempValueIndex>=0?aiAvailableValues.splice(tempValueIndex,1):"";playerTurn=true;aiPositionArray.push(pos);let tempIndex=userPositionArray.indexOf(pos);tempIndex>=0?userPositionArray.splice(tempIndex,1):""}